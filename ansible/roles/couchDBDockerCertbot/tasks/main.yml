#####
###  DOCKER CERTBOT
#
---
- debug:
    msg: START DOCKER CERTBOT...

- name: check if certificate exists
  become: true
  shell: 'docker compose run nginx test -e /etc/nginx/ssl/live/{{DOMAIN_NAME}}/fullchain.pem && echo 1 || echo 0'
  # if "0" certificate does not exist, if "1" certificate exists
  register: hasAValidCertificate
- name: debug [check if certificate exists]
  debug:
    var: hasAValidCertificate

- name: DRY RUN create certificate for {{DOMAIN_NAME}}
  become: true
  shell: 'docker compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --agree-tos --dry-run -d {{DOMAIN_NAME}} -m {{EMAIL}}'
  register: dryRunCertificateWasSuccessfullyCreated
  # if "0" certificate does not exist, we need to create a certificate config
  when: hasAValidCertificate.stdout == "0"
- name: debug [DRY RUN create certificate for {{DOMAIN_NAME}}]
  debug:
    var: dryRunCertificateWasSuccessfullyCreated

- name: REAL create certificate for {{DOMAIN_NAME}}
  become: true
  shell: 'docker compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --agree-tos -d {{DOMAIN_NAME}} -m {{EMAIL}}'
  register: realCertificateWasSuccessfullyCreated
  # if "0" certificate does not exist, we need to create a certificate config
  when: hasAValidCertificate.stdout == "0"
- name: debug [REAL create certificate for {{DOMAIN_NAME}}]
  debug:
    var: realCertificateWasSuccessfullyCreated

- name: remove old http config
  file:
    path: ./nginx/conf/couchdbHttpCreateCert.conf
    state: absent
  register: result
  when: hasAValidCertificate.stdout == "0"
- name: debug [remove old http config]
  debug:
    var: result

- name: copy files local to remote with a template (couchdbHttps)
  template:
    src: couchdbHttps
    dest: ./nginx/conf/couchdbHttps.conf
  register: result
  # if "0" certificate does not exist, we need to create a certificate config
  when: hasAValidCertificate.stdout == "0"
- name: debug [copy files local to remote with a template (couchdbHttps)]
  debug:
    var: result

- name: reload nginx config
  become: true
  shell: 'docker compose exec nginx nginx -s reload'
  register: result
  # if "0" certificate does not exist, we need to create a certificate config
  when: hasAValidCertificate.stdout == "0"
- name: debug [reload nginx config]
  debug:
    var: result

- name: create a new log file for the cerbot renewal process
  file:
    path: ./certbot-renewal.log
    state: touch
  when: hasAValidCertificate.stdout == "0"
  register: result
- name: debug [create a new log file for the cerbot renewal process]
  debug:
    var: result

- name: add cron job to renew certificate
  cron:
    name: renew certificate
    minute: '10'
    hour: '0'
    day: '*'
    job: 'docker compose run --rm certbot renew > certbot-renewal.log  >certbot-renewal.log 2>&1'
  when: hasAValidCertificate.stdout == "0"
  register: result
- name: debug [add cron job to renew certificate]
  debug:
    var: result

- debug:
    msg: END DOCKER CERTBOT...
